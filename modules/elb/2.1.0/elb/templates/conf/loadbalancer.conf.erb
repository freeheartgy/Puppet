# Copyright (c) 2005-2010, WSO2 Inc. (http://wso2.com) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# configuration details of WSO2 Elastic Load Balancer
# for more info on how it works, refer to: http://blog.afkham.org/2011/09/wso2-load-balancer-how-it-works.html
# for more info on how to set it up, refer to: http://nirmalfdo.blogspot.com/2012/06/fronting-wso2-application-server-50.html
loadbalancer {
    # minimum number of load balancer instances 
    instances           1;
    # whether autoscaling should be enabled or not.
    enable_autoscaler   <%= @auto_scaler %>;
    # autoscaling decision making task
    #autoscaler_task  org.wso2.carbon.mediator.autoscale.lbautoscale.task.ServiceRequestsInFlightAutoscaler;
    # whether to use embedded autoscaler or not. By default, we use embedded autoscaler. 
    #use_embedded_autoscaler false;
    #please use this whenever url-mapping is used through LB.
    #size_of_cache    100;
    # End point reference of the Autoscaler Service. This should be present, if you disabled embedded autoscaling.
    autoscaler_service_epr  <%= @auto_scaler_epr %>; 
    # interval between two task executions in milliseconds 
    autoscaler_task_interval 60000;
    # after an instance booted up, task will wait maximum till this much of time and let the server started up
    server_startup_delay 600000; #default will be 60000ms
    # session time out
    session_timeout 90000; 
    # enable fail over 
    fail_over true;
    #mb_server_url localhost:5672;
}

# services' details which are fronted by this WSO2 Elastic Load Balancer
services {
    # default parameter values to be used in all services
    defaults {
        # minimum number of service instances required. WSO2 ELB will make sure that this much of instances
        # are maintained in the system all the time, of course only when autoscaling is enabled.
        min_app_instances       1;
        # maximum number of service instances that will be load balanced by this ELB.
        max_app_instances       5;
        # you need to calibrate autoscaling parameters before start using. Please go through following blog post
        # http://nirmalfdo.blogspot.com/2013/01/scale-up-early-scale-down-slowly.html
        max_requests_per_second   5;
        alarming_upper_rate 0.7;
        alarming_lower_rate 0.2;
        scale_down_factor 0.25;
        rounds_to_average       2;
        message_expiry_time     60000;
    }
<% @services.each do |service| %>

<% if service[0].include? 'appfactory' %>
  appfactory {
    domains {
      wso2.<%= service[0] %>.domain {
        mgt {   
          hosts <%= @af_cluster_domain %>.<%= @domain %>;
          tenant_range <%= service[1] %>;
          group_mgt_port <%= service[3] %>;
        }
      }
    }
  }
  <% elsif service[0].include? 'governance' or 
           service[0].include? 'monitor' or 
           service[0].include? 'storage' or 
           service[0].include? 'jenkins' or 
           service[0].include? 'cloudmgt' or 
           service[0].include? 'issue-tracker' or 
           service[0].include? 'task' or 
           service[0].include? 'cep' or 
           service[0].include? 'cloudgateway' or 
           service[0].include? 'apimanager' or 
           service[0].include? 'identity' %>
    <%= service[0] %> {
      domains {
        wso2.<%= service[0] %>.domain {
          mgt {   
            hosts          <%= service[0] %>.<%= @domain %>;
            tenant_range   <%= service[1] %>;
            group_mgt_port <%= service[3] %>;
          }
        }
      }
    }
  <% elsif service[0].include? 'store' or 
           service[0].include? 'gateway' or 
           service[0].include? 'keymanager' or 
           service[0].include? 'publisher' %>
  <%= service[0] %> {
    domains {
      wso2.<%= service[0] %>.domain {
        mgt {   
          hosts          <%= service[0] %>.<%= @am_subdomain %>.<%= @domain %>;
          tenant_range   <%= service[1] %>;
          group_mgt_port <%= service[3] %>;
        }
      }
    }
  }
  <% elsif service[0] == 'dummy' %>
    aaa.appserver.dev {
      domains {
        aaa.wso2.as.domain {
        min_app_instances       0;
        hosts           aaa.appserver.dev.cloudpreview.wso2.com;
        sub_domain      mgt;
        tenant_range    *;
      }
    }
  }
<% else %>  
  <%= service[0] %> {
    domains {
      <% if service[2] == '*' %>
      wso2.<%= service[0] %>.domain {
        mgt {
          hosts <%= management_subdomain %>.<%= service[0] %>.<%= @domain %>; 
        }   
        worker {
          hosts <%= service[0] %>.<%= @domain %>; 
        }   
        group_mgt_port     <%= service[3] %>; 
        members            <%= service[4] %>;
        tenant_range       <%= service[1] %>; 
      }   
      <% elsif service[2] == 'mgt' %>
      wso2.<%= service[0] %>.domain {
        mgt {
          hosts  <%= management_subdomain %>.<%= service[0] %>.<%= @domain %>; 
        }   
        group_mgt_port     <%= service[3] %>; 
        members            <%= service[4] %>;
        tenant_range       <%= service[1] %>; 
      }<% elsif service[2] == 'worker' %>
      wso2.<%= service[0] %>.domain {
        worker {
          hosts  <%= service[0] %>.<%= @domain %>; 
        }   
        group_mgt_port     <%= service[3] %>; 
        members            <%= service[4] %>;
        tenant_range       <%= service[1] %>; 
      }<% end %>
    }   
 }<% end %>
<% end %>
}
